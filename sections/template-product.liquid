<div class="container mx-auto py-12 px-4 md:px-6 2xl:px-20">
  <div class="md:flex md:flex-nowrap">
    <!-- Product Media Carousel -->
    <div class="sticky-section md:w-1/2 lg:w-2/6 mb-6 md:mb-0 space-y-4">
      {% for media in product.media %}
        <div class="carousel-image">
          {% render 'product-media', media: media %}
        </div>
      {% endfor %}
    </div>

    <!-- Product Information -->
    <div class="content-section :w-1/2 lg:w-3/5 lg:pl-10">
      <div class="border-b border-gray-200 pb-6">
        <p class="text-sm text-gray-600">{{ product.vendor }}</p>
        <h1 class="text-2xl font-semibold text-gray-800 mt-2">{{ product.title }}</h1>
      </div>

      <div class="py-4">
        {% if product.compare_at_price_max > product.price %}
          <p class="text-sm line-through text-gray-500">{{ product.compare_at_price | money }}</p>
        {% endif %}
        <p class="text-2xl font-semibold text-gray-800">{{ product.price | money }}</p>
        {% if product.compare_at_price_max > product.price %}
          <p class="text-lg text-red-500">
            Save
            {{
              product.compare_at_price_max
              | minus: product.price
              | times: 100.0
              | divided_by: product.compare_at_price_max
              | round
            -}}
            %
          </p>
        {% endif %}
      </div>

      <div class="py-4">
        <p class="text-gray-600">{{ product.description }}</p>
      </div>

      <!-- Variants -->
      {% if product.variants.size > 1 %}
        <div class="variants space-y-4">
          {% for variant in product.variants %}
            <div class="flex items-center space-x-3">
              <label class="text-gray-700">
                {{ variant.title }}
                {% if variant.available %}
                  <input
                    type="radio"
                    name="id"
                    value="{{ variant.id }}"
                    {% if forloop.first %}
                      checked
                    {% endif %}
                    class="ml-2"
                  >
                {% else %}
                  <span class="text-gray-500 line-through">Sold out</span>
                {% endif %}
              </label>
            </div>
          {% endfor %}
        </div>
      {% endif %}

      <!-- Quantity Selector -->
      <div class="flex items-center mt-4">
        <button class="quantity-decrease px-3 py-2 bg-gray-200 hover:bg-gray-300 text-gray-600">-</button>
        <input type="number" name="quantity" value="1" class="w-12 text-center bg-gray-200 mx-2" min="1">
        <button class="quantity-increase px-3 py-2 bg-gray-200 hover:bg-gray-300 text-gray-600">+</button>
      </div>

      <!-- Add to Cart Button -->
      <form action="/cart/add" method="post" enctype="multipart/form-data" class="mt-4">
        <input type="hidden" name="id" value="{{ product.variants.first.id }}">
        <button
          type="submit"
          class="bg-black text-white py-4 w-full hover:bg-gray-900 transition duration-300 text-lg font-semibold"
        >
          Add to cart
        </button>
      </form>
    </div>
  </div>
  <!-- This is the closing div for the outermost flex container -->
</div>

<!-- Tailwind CSS -->
<link href="https://cdn.tailwindcss.com" rel="stylesheet">

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const decreaseButton = document.querySelector('.quantity-decrease');
    const increaseButton = document.querySelector('.quantity-increase');
    const quantityInput = document.querySelector('input[name="quantity"]');

    decreaseButton.addEventListener('click', function (e) {
      e.preventDefault();
      const currentValue = Number(quantityInput.value);
      quantityInput.value = currentValue > 1 ? currentValue - 1 : 1;
    });

    increaseButton.addEventListener('click', function (e) {
      e.preventDefault();
      const currentValue = Number(quantityInput.value);
      quantityInput.value = currentValue + 1;
    });
  });

  // app.js
  const stickySection = document.querySelector('.sticky-section');
  const contentSection = document.querySelector('.content-section');

  window.addEventListener('scroll', () => {
    const scrollPosition = window.scrollY;
    const contentTop = contentSection.offsetTop;

    if (scrollPosition >= contentTop) {
      stickySection.classList.add('sticky');
    } else {
      stickySection.classList.remove('sticky');
    }
  });
</script>

<!-- Tailwind CSS for Sticky Scrolling -->
<style>
  /* Additional styles for sticky scrolling */
  .md:flex {
    position: relative;
  }

  /* Making the product media sticky */
  .carousel-image {
    position: -webkit-sticky; /* Safari */
    position: sticky;
    top: 0; /* Adjust this value based on your header's height or desired offset */
    height: calc(100vh - 20px); /* Full height minus offset */
    overflow-y: auto;
  }

  /* Ensuring the product information scrolls normally */
  .product-info {
    height: auto;
    overflow-y: auto;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .carousel-image {
      position: relative; /* Disable sticky effect on smaller screens */
    }
  }
</style>
