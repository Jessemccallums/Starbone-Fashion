<div class="flex flex-col items-center my-8">
    <h1 class="text-3xl font-medium">{{ section.settings.title }}</h1>

    <div class="max-w-6xl mx-auto my-3">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
            {% for collection in collections %}
                {% if collection.all_products_count > 0 %}
                    <div class="w-full py-6 px-3">
                        <div class="border bg-white overflow-hidden">
                            <a href="{{ collection.url }}">
                                <div class="h-80 overflow-hidden">
                                    {% if collection.featured_image != blank %}
                                        {% assign collection_image = collection.featured_image %}
                                    {% else %}
                                        {% assign collection_image = collection.products.first.image %}
                                    {% endif %}

                                    <img class="image" src="{{ collection_image | img_url: 'medium' }}" alt="{{ collection.title | escape }}">
                                </div>
                            </a>

                            <div class="p-4 bg-gray-100">
                                <h1 class="text-xl">{{ collection.title }}</h1>
                            </div>
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>
    </div>
</div>

<style>
/* Base styles for the container */
.flex.flex-col.items-center.my-8 {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  
  /* Styles for the section title */
  .text-3xl.font-medium {
    font-size: 1.875rem;
    font-weight: 500;
  }
  
  /* Styles for the container with grid */
  .max-w-6xl.mx-auto.my-3 {
    max-width: 72rem;
    margin-left: auto;
    margin-right: auto;
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
  }
  
  /* Styles for the grid and grid items */
  .grid.grid-cols-1.md\:grid-cols-3.gap-3 {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 0.75rem;
  }
  
  /* Styles for the individual collection container */
  .w-full.py-6.px-3 {
    width: 100%;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
  
  /* Styles for the collection container */
  .border.bg-white.overflow-hidden {
    border: 1px solid #e2e8f0;
    background-color: #ffffff;
    overflow: hidden;
  }
  
  /* Styles for the collection image */
  a[href="{{ collection.url }}"] .h-80.overflow-hidden {
    height: 27rem;
    overflow: hidden;
  }
  
  a[href="{{ collection.url }}"] .w-full.h-full.object-cover.transition.duration-1000.ease-in-out.transform.hover\:scale-105 {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition-duration: 1000ms;
    transition-timing-function: ease-in-out;
  }
  
  /* Styles for the collection title */
  .p-4.bg-gray-100 {
    padding: 1rem;
    background-color: #f7fafc;
  }
  
  h1.text-xl {
    font-size: 1.25rem;
  }
  
  .image{

    width: 100%;
    height: 100%;
}

</style>


{% schema %}
{
    "name": "Template List Collections",
    "settings": [
        {
            "type": "text",
            "id": "title",
            "default": "Collections",
            "label": "Title"
        }
    ]
}
{% endschema %}